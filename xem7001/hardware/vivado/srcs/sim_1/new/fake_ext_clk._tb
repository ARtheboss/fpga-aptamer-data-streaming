`timescale 1ns / 1ps

module fake_ext_clk_tb;
    reg clk_in = 1;
    reg rst;
    wire clk_out;
    fake_ext_clk #(.CLK_IN_FREQ(100000000), .CLK_OUT_FREQ(10000000)) fec(
        .clk_in(clk_in),
        .rst(rst),
        .clk_out(clk_out)
    );
    always #(5) clk_in <= ~clk_in;
    
    task check_period;
        repeat (100) begin
            @(posedge clk_in) begin
                if (!clk_out) $display("clk_out was 0 when it should be 1");
            end
        end
        repeat (100) begin
            @(posedge clk_in) begin
                if (clk_out) begin
                    $display("clk_out was 1 when it should be 0");
                    assert(0);
                end
            end
        end
    endtask
    
    integer i;
    initial begin
        rst = 1;
        @(posedge clk_in);
        #2; rst = 0;
        for (i = 0; i < 20; i = i + 1) begin
            check_period();
        end
        $finish;
    end
endmodule